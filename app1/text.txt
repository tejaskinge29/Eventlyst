login code
 try {
      setState(() {
        isLoading = true;
      });

      final userCredential =
          await FirebaseAuth.instance.signInWithEmailAndPassword(
        email: _email.text,
        password: _password.text,
      );
      final user = userCredential.user;
      setState(() {
        isLoading = false;
      });
      if (user != null) {
        // User is logged in, navigate to the home page
        Navigator.pushNamed(context, MyRoutes.homeRoute);
      } else {
        // User is not found in Firebase Authentication
        ScaffoldMessenger.of(context).showSnackBar(
          const SnackBar(
            content: Text("No user found for that email."),
          ),
        );
      }
    } on FirebaseAuthException catch (e) {
      setState(() {
        isLoading = false;
      });
      // Redirect to the home page
      Navigator.pushNamed(context, MyRoutes.homeRoute);
    } on FirebaseAuthException catch (e) {
      setState(() {
        isLoading = false;
      });
      // Handling password matching
      if (e.code == 'user-not-found') {
        return ScaffoldMessenger.of(context).showSnackBar(
          const SnackBar(
            content: Text("No user found for that email."),
          ),
        );
      } else if (e.code == 'wrong-password') {
        return ScaffoldMessenger.of(context).showSnackBar(
          const SnackBar(
            content: Text("Wrong password provided for that user."),
          ),
        );
      }
    }
  }


  ==>  not working the login button  <==

   try {
      setState(() {
        isLoading = true;
      });

      final String email = _email.text.trim();
      final String password = _password.text.trim();

      UserCredential userCredential =
          await FirebaseAuth.instance.signInWithEmailAndPassword(
        email: email,
        password: password,
      );

      if (userCredential.user != null) {
        // User logged in successfully.

        // Check if user data exists in Firestore.
        DocumentSnapshot userData = await FirebaseFirestore.instance
            .collection('users')
            .doc(userCredential.user!.uid)
            .get();

        if (userData.exists) {
          // User data exists in Firestore.
          Map<String, dynamic> userDataMap =
              userData.data() as Map<String, dynamic>;

          // Access user data fields, e.g., userDataMap['name'], userDataMap['username'], etc.

          setState(() {
            isLoading = false;
          });

          // After successful login and data retrieval, navigate to the home page.
          // Navigator.pushNamed(context, MyRoutes.homeRoute);

          Navigator.push(
            context,
            MaterialPageRoute(
                builder: (context) =>
                    HomePage()), // Replace with your home page widget
          );
        } else {
          // User data does not exist in Firestore.
          setState(() {
            isLoading = false;
          });

          ScaffoldMessenger.of(context).showSnackBar(
            const SnackBar(
              content: Text("User data not found in Firestore."),
            ),
          );
        }
      } else {
        // User does not exist or credentials are incorrect.
        setState(() {
          isLoading = false;
        });

        ScaffoldMessenger.of(context).showSnackBar(
          const SnackBar(
            content: Text(
                "Invalid credentials. Please check your email and password."),
          ),
        );
      }
    } catch (e) {
      setState(() {
        isLoading = false;
      });

      // Handle login errors
      print('Error during login: $e');
    }
  }